#!/usr/bin/bash

unset GIT_DIR

NOCOLOR='\033[0m'
RED='\033[1;31m'
GREEN='\033[1;32m'
WHITE='\033[1;37m'

OUTPUT_DIR=zuu
FORMAT=false
VERIFY=false
AUDIT=false
CLIPPY=false
TESTS=false
CHECK=false

if [ ! -d ${OUTPUT_DIR} ]
then
    mkdir ${OUTPUT_DIR}
    touch "${OUTPUT_DIR}/.gitignore"
    echo "*.out" > "${OUTPUT_DIR}/.gitignore"
fi

if ! cargo verify-project --quiet  > "${OUTPUT_DIR}/verify.out" 2> "${OUTPUT_DIR}/verify_error.out"
then
    VERIFY=false
else
    VERIFY=true
fi

if ! cargo fmt --check  > "${OUTPUT_DIR}/fmt.out" 2> "${OUTPUT_DIR}/fmt_error.out"
then
    FORMAT=false
else
    FORMAT=true
fi


if ! cargo audit --quiet  > "${OUTPUT_DIR}/audit.out" 2> "${OUTPUT_DIR}/audit_error.out"
then
    AUDIT=false
else
    AUDIT=true
fi

if ! cargo clippy --quiet -- -F keyword_idents -F warnings -F let-underscore -F rust-2018-compatibility -F rust-2018-idioms  -F rust-2021-compatibility -F future-incompatible -F unused -F unused_crate_dependencies -F unused_extern_crates  -D unused_macro_rules -F unused_results -F unused_qualifications -F nonstandard-style -F macro_use_extern_crate -F absolute_paths_not_starting_with_crate -F ambiguous_glob_imports -F clippy::all -F clippy::perf -F clippy::pedantic -F clippy::style -F clippy::suspicious -F clippy::correctness -F clippy::nursery -F clippy::complexity -F clippy::cargo > "${OUTPUT_DIR}/clippy.out" 2> "${OUTPUT_DIR}/clippy_error.out"
then
    CLIPPY=false
else
    CLIPPY=true
fi

if ! cargo test  > "${OUTPUT_DIR}/tests.out" 2> "${OUTPUT_DIR}/tests_error.out"
then
    TESTS=false
else
    TESTS=true
fi

if ! cargo check --quiet --all-targets  > "${OUTPUT_DIR}/check.out" 2> "${OUTPUT_DIR}/check_error.out"
then
    CHECK=false
else
    CHECK=true
fi


clear


if [ ${VERIFY} == true ]
then
    echo -e "\n${WHITE}[${GREEN} OK${WHITE} ] verify${NOCOLOR}"
else
    echo -e "\n${WHITE}[${RED} KO${WHITE} ] verify${NOCOLOR}"
fi

if [ ${FORMAT} == true ]
then
    echo -e "\n${WHITE}[${GREEN} OK${WHITE} ] format${NOCOLOR}"
else
    echo -e "\n${WHITE}[${RED} KO${WHITE} ] format${NOCOLOR}"
fi


if [ ${AUDIT} == true ]
then
    echo -e "\n${WHITE}[${GREEN} OK${WHITE} ] audit${NOCOLOR}"
else
    echo -e "\n${WHITE}[${RED} KO${WHITE} ] audit${NOCOLOR}"
fi

if [ ${CLIPPY} == true ]
then
    echo -e "\n${WHITE}[${GREEN} OK${WHITE} ] clippy${NOCOLOR}"
else
    echo -e "\n${WHITE}[${RED} KO${WHITE} ] clippy${NOCOLOR}"
fi

if [ ${TESTS} == true ]
then
    echo -e "\n${WHITE}[${GREEN} OK${WHITE} ] tests${NOCOLOR}"
else
    echo -e "\n${WHITE}[${RED} KO${WHITE} ] tests${NOCOLOR}"
fi

if [ ${CHECK} == true ]
then
    echo -e "\n${WHITE}[${GREEN} OK${WHITE} ] check${NOCOLOR}"
else
    echo -e "\n${WHITE}[${RED} KO${WHITE} ] check${NOCOLOR}"
fi


if [ ${FORMAT} == true ] && [ ${VERIFY} == true ] && [ ${AUDIT} == true ] && [ ${CLIPPY} == true ]  && [ ${TESTS} == true ] && [ ${CHECK} == true ]
then
    echo -e "\n${WHITE}[${GREEN} OK${WHITE} ] Code is valid${NOCOLOR}\n"
    exit 0
else
    echo
    exit 1
fi
